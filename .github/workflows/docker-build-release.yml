name: Docker Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - id: bumpr
        if: "!startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'"
        uses: haya14busa/action-bumpr@v1

      - id: tag
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.head_ref }}
          if_false: ${{ steps.bumpr.outputs.next_version }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: peimanja/artifactory_exporter
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=
            ${{ steps.tag.outputs.value }}
          flavor: |
            latest=true

      - name: Set up  QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build/Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args:
            VERSION=${{ steps.bumpr.outputs.next_version }}
            SOURCE_COMMIT=${{ github.sha }}
            SOURCE_BRANCH=${{ github.ref }}
            BUILD_DATE=${{ github.created_at }}

      - uses: haya14busa/action-update-semver@v1
        if: "!steps.bumpr.outputs.skip && github.event_name != 'pull_request'"
        with:
          tag: "${{ steps.bumpr.outputs.next_version }}"

      - uses: actions/create-release@v1
        if: "steps.tag.outputs.value != '' && github.event_name != 'pull_request'"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          release_name: Release ${{ steps.tag.outputs.value }}
          body: ${{ steps.bumpr.outputs.message }}
          draft: false
          prerelease: false
